name: Deploy Front Docker

on:
  push:
    branches:
      - master
      - release/*
    paths:
      - 'frontend/**'
  pull_request:
    branches:
      - master
      - release/*
    paths:
      - 'frontend/**'

jobs:
  deploy_front:
    if: github.repository == 'wkarts/ihub'
    runs-on: ubuntu-22.04 
    environment: production 
    steps:
      - name: "Checkout" 
        uses: actions/checkout@v4

      - name: "Use NodeJS"          
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
    
      - name: Verify Node.js version
        run: node -v
    
      - name: Install Quasar CLI
        run: npm install -g @quasar/cli

      - name: Install dependencies
        run: npm install
        working-directory: ./frontend

      - name: Build Frontend
        run: |
          cd frontend
          export NODE_OPTIONS=--openssl-legacy-provider
          npx quasar build -P -m pwa

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image for master
        if: github.ref == 'refs/heads/master'
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKERHUB_USERNAME }}/ihub-frontend:developer-${{ github.sha }} --push ./frontend
          docker buildx build --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKERHUB_USERNAME }}/ihub-frontend:developer --push ./frontend

      - name: Build and push Docker image for release
        if: startsWith(github.ref, 'refs/heads/release/')
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKERHUB_USERNAME }}/ihub-frontend:release-${{ github.sha }} --push ./frontend
          docker buildx build --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKERHUB_USERNAME }}/ihub-frontend:v${{ github.ref_name }} --push ./frontend
          docker buildx build --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKERHUB_USERNAME }}/ihub-frontend:latest --push ./frontend
